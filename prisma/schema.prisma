// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  username      String   @unique
  email         String   @unique
  password      String
  profileImage  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relacionamentos
  tweets        Tweet[]
  likes         Like[]
  
  // Seguidores e seguindo
  followers     Follow[] @relation("UserFollowers")
  following     Follow[] @relation("UserFollowing")

  @@map("users")
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  authorId  Int
  author    User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  
  likes     Like[]
  
  // Replies
  parentId  Int?
  parent    Tweet?  @relation("TweetReplies", fields: [parentId], references: [id], onDelete: Cascade)
  replies   Tweet[] @relation("TweetReplies")

  @@map("tweets")
}

model Like {
  id      Int @id @default(autoincrement())
  userId  Int
  tweetId Int
  
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  
  createdAt DateTime @default(now())

  @@unique([userId, tweetId])
  @@map("likes")
}

model Follow {
  id          Int @id @default(autoincrement())
  followerId  Int
  followingId Int
  
  follower    User   @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  following   User   @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@map("follows")
}
